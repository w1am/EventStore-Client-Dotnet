name: Build

on:
  workflow_call:
    inputs:
      docker-tag:
        required: true
        type: string

jobs:
  pull-eventstoredb:
    name: Pull Docker EventStoreDB
    runs-on: ubuntu-latest

    steps:
      - name: Pull and Start EventStoreDB Docker Container
        run: |
          docker pull docker.eventstore.com/eventstore-ce/eventstoredb-ce:latest
          docker run -d -p 2113:2113 -p 1113:1113 --name eventstore docker.eventstore.com/eventstore-ce/eventstoredb-ce:latest

  generate-certificates:
    runs-on: ubuntu-latest
    needs: pull-eventstoredb
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate certificates
        run: |
          mkdir -p certs
          docker run --rm --user root --volume "$PWD/certs:/tmp" ghcr.io/eventstore/es-gencert-cli:1.3 create-ca -out /tmp/ca
          docker run --rm --user root --volume "$PWD/certs:/tmp" ghcr.io/eventstore/es-gencert-cli:1.3 create-node -ca-certificate /tmp/ca/ca.crt -ca-key /tmp/ca/ca.key -out /tmp/node -ip-addresses 127.0.0.1 -dns-names localhost
          docker run --rm --user root --volume "$PWD/certs:/tmp" ghcr.io/eventstore/es-gencert-cli:1.3 create-user -username admin -ca-certificate /tmp/ca/ca.crt -ca-key /tmp/ca/ca.key -out /tmp/user-admin
          docker run --rm --user root --volume "$PWD/certs:/tmp" ghcr.io/eventstore/es-gencert-cli:1.3 create-user -username invalid -ca-certificate /tmp/ca/ca.crt -ca-key /tmp/ca/ca.key -out /tmp/user-invalid
      - name: Set permissions on certificates
        run: |
          sudo chown -R $USER:$USER certs
          sudo chmod -R 755 certs
      - name: Upload certificates
        uses: actions/upload-artifact@v2
        with:
          name: certs
          path: certs

  test:
    needs: generate-certificates
    runs-on: windows-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        framework: [ net48 ]
        test: [ Operations ]
        configuration: [ release ]
    name: EventStore.Client.${{ matrix.test }}/${{ matrix.framework }}/${{ inputs.docker-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Compile
        shell: bash
        run: |
          dotnet build --configuration ${{ matrix.configuration }} --framework ${{ matrix.framework }} src/EventStore.Client.${{ matrix.test }}

      - name: Download certificates
        uses: actions/download-artifact@v2
        with:
          name: certs
          path: certs

      - name: Import certificates (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Import-Certificate -FilePath "certs\ca\ca.crt" -CertStoreLocation "Cert:\LocalMachine\Root"

      - name: Run Tests
        shell: pwsh
        env:
          ES_DOCKER_TAG: ${{ inputs.docker-tag }}
          EVENTSTORE_DB_HOST: 127.0.0.1
        run: |
          dotnet test --configuration ${{ matrix.configuration }} --blame `
            --logger:"GitHubActions;report-warnings=false" --logger:"console;verbosity=normal" `
            --framework ${{ matrix.framework }} `
            test/EventStore.Client.${{ matrix.test }}.Tests
